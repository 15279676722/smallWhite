package com.example.smallwhite;import com.example.smallwhite.entity.BeanUser;import com.example.smallwhite.spring.entity.Book2;import com.example.smallwhite.utils.SpringContextUtil;import lombok.extern.slf4j.Slf4j;import org.junit.jupiter.api.Test;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.context.support.ClassPathXmlApplicationContext;/** * Spring生命周期 * 实例化对象 -> * 调用对象构造方法(多个构造方法之间会调用哪个？)->  优先调用无参和@Autowired构造方法 利用反射创建对象 * 属性填充(依赖注入)   -> * 实现InitializingBean的bean会去调用afterPropertiesSet方法(初始化) -> * * @author: yangqiang * @create: 2021-03-04 19:19 */@SpringBootTest@Slf4jpublic class SpringTest {    @Test    public void test(){        BeanUser bean = SpringContextUtil.getBean(BeanUser.class);        bean.test();    }    @Test    public void test2(){        ClassPathXmlApplicationContext ac = new ClassPathXmlApplicationContext("springconfig2.xml");        Book2 bean = ac.getBean(Book2.class);        System.out.println(bean.toString());    }}
package com.example.smallwhite.config.rabbitmq;import lombok.extern.slf4j.Slf4j;import org.springframework.amqp.rabbit.connection.ConnectionFactory;import org.springframework.amqp.rabbit.core.RabbitTemplate;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;/** * 如何确保消息正确地发送至RabbitMQ？ * 如果是交换机方面的问题 *    通过ConfirmCallBack机制查看他的返回信息: 确认情况如果是false的话说明没有发送成功 再进行投递或者其他操作 * 如果是因为队列方面的问题 *    通过ReturnCallBack机制查看返回信息:服务器端会发送一条nack消息返回对应的投递失败原因 * * 消息回调函数 * 4种情况 * ①消息推送到server，但是在server里找不到交换机 *     这种情况触发的是 ConfirmCallback 回调函数。 *     Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=404, reply-text=NOT_FOUND - no exchange 'non-existent-exchange' in vhost '/', class-id=60, method-id=40) *     ConfirmCallback:     相关数据：null *     ConfirmCallback:     确认情况：false *     ConfirmCallback:     原因：channel error; protocol method: #method<channel.close>(reply-code=404, reply-text=NOT_FOUND - no exchange 'non-existent-exchange' in vhost '/', class-id=60, method-id=40) *     这里报错没有找到对应的交换机 * ②消息推送到server，找到交换机了，但是没找到队列 *     消息：(Body:'{createTime=2020-10-14 15:18:43, messageId=0f34d07b-537d-46d9-8425-e99330af2bdc, messageData=message: lonelyDirectExchange test message }' MessageProperties [headers={}, contentType=application/x-java-serialized-object, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, deliveryTag=0]) *     ReturnCallback:     回应码：312 *     ReturnCallback:     回应信息：NO_ROUTE *     ReturnCallback:     交换机：lonelyDirectExchange *     ReturnCallback:     路由键：TestDirectRouting *     ConfirmCallback:     相关数据：null *     ConfirmCallback:     确认情况：true   (这种情况下。消息是推送成功到服务器了的。所以ConfirmCallback对消息确认情况是true；) *     ConfirmCallback:     原因：null * ③消息推送到sever，交换机和队列啥都没找到 *     和情况1一样 * ④消息推送成功 *     Created new connection: rabbitConnectionFactory#57515944:1/SimpleConnection@70f5d55d [delegate=amqp://root@127.0.0.1:5672/, localPort= 53025] *     ConfirmCallback:     相关数据：null *     ConfirmCallback:     确认情况：true *     ConfirmCallback:     原因：null * @author: yangqiang * @create: 2020-10-14 14:32 */@Slf4j@Configurationpublic class RabbitConfig {    @Bean    public RabbitTemplate createRabbitTemplate(ConnectionFactory connectionFactory) {        RabbitTemplate rabbitTemplate = new RabbitTemplate();        rabbitTemplate.setConnectionFactory(connectionFactory);        //设置开启Mandatory,才能触发回调函数,无论消息推送结果怎么样都强制调用回调函数        rabbitTemplate.setMandatory(true);        rabbitTemplate.setConfirmCallback(new ConfirmCallBackConfig());        rabbitTemplate.setReturnCallback(new ReturnCallBackConfig());        return rabbitTemplate;    }}
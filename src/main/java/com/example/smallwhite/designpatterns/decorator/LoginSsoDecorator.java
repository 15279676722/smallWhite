package com.example.smallwhite.designpatterns.decorator;import lombok.extern.slf4j.Slf4j;import org.ehcache.impl.internal.concurrent.ConcurrentHashMap;import java.util.Map;/** * @author: yangqiang * @create: 2021-02-23 22:21 */@Slf4jpublic  class LoginSsoDecorator extends SsoInterceptor{    private static Map<String, String> authMap = new ConcurrentHashMap<String, String>();    static {        authMap.put("huahua", "queryUserInfo");        authMap.put("doudou", "queryUserInfo");    }    public LoginSsoDecorator(HandlerInterceptor handlerInterceptor) {        super(handlerInterceptor);    }    @Override    public boolean preHandle(String request, String response, Object handler) {        String userId = request.substring(8);        String method = authMap.get(userId);        log.info("模拟单点登录方法访问拦截校验：{} {}", userId, method);        // 模拟方法校验        boolean equals = "queryUserInfo".equals(method);        if (!equals) {            return false;        }        boolean success = handlerInterceptor.preHandle(request, response, handler);        if (!success) {            return false;        }        return true;    }}
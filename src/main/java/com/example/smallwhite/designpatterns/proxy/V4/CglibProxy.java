package com.example.smallwhite.designpatterns.proxy.V4;import net.sf.cglib.proxy.Enhancer;import net.sf.cglib.proxy.MethodInterceptor;import net.sf.cglib.proxy.MethodProxy;import java.lang.reflect.Method;/** * @author: yangqiang * @create: 2021-02-26 11:16 */public class CglibProxy implements MethodInterceptor {    private Object target;    public Object getInstance(final Object target) {        this.target = target;        Enhancer enhancer = new Enhancer();        enhancer.setSuperclass(this.target.getClass());        enhancer.setCallback(this);        return enhancer.create();    }    @Override    public Object intercept(Object o, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {        return methodProxy.invoke(target,args);    }}
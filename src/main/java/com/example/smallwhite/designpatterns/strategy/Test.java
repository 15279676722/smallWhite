package com.example.smallwhite.designpatterns.strategy;import lombok.extern.slf4j.Slf4j;import java.math.BigDecimal;import java.util.HashMap;import java.util.Map;/** * 策略模式 * 根据不同的策略执行不同的行为 * @author: yangqiang * @create: 2021-03-02 20:15 */@Slf4jpublic class Test {    public static void main(String[] args) {        // 直减；100-10，商品100元        Context<Double> context = new Context<Double>(new ZJCouponDiscount());        BigDecimal discountAmount = context.discountAmount(10D, new BigDecimal(100));        log.info("测试结果：直减优惠后金额 {}", discountAmount);        // 满100减10，商品100元        Context<Map<String,String>> context2 = new Context<Map<String,String>>(new MJCouponDiscount());        Map<String,String> mapReq = new HashMap<String, String>();        mapReq.put("x","100");        mapReq.put("n","10");        discountAmount = context2.discountAmount(mapReq, new BigDecimal(100));        log.info("测试结果：满减优惠后金额 {}", discountAmount);        // 折扣9折，商品100元        Context<Double> context3 = new Context<Double>(new ZKCouponDiscount());        discountAmount = context3.discountAmount(0.9D, new BigDecimal(100));        log.info("测试结果：折扣9折后金额 {}", discountAmount);        // n元购；100-10，商品100元        Context<Double> context4 = new Context<Double>(new NYGCouponDiscount());        discountAmount = context4.discountAmount(90D, new BigDecimal(100));        log.info("测试结果：n元购优惠后金额 {}", discountAmount);    }}
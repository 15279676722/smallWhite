package com.example.smallwhite.utils.excel;import com.alibaba.excel.EasyExcel;import com.alibaba.excel.write.metadata.style.WriteCellStyle;import com.alibaba.excel.write.metadata.style.WriteFont;import com.alibaba.excel.write.style.HorizontalCellStyleStrategy;import com.example.smallwhite.entity.ExportVO;import com.example.smallwhite.utils.excel.service.ExportService;import com.example.smallwhite.utils.GetDemoObject;import org.apache.poi.ss.usermodel.FillPatternType;import org.apache.poi.ss.usermodel.IndexedColors;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;import javax.servlet.http.HttpServletResponse;import java.lang.reflect.Array;import java.util.*;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;/** * @author: yangqiang * @create: 2020-09-14 10:50 */@RestControllerpublic class ExportController {    @Autowired    ExportService service;    @RequestMapping("/download")    public void export(HttpServletResponse response){        try {            // 头的策略//            WriteCellStyle headWriteCellStyle = new WriteCellStyle();            // 背景设置为黄色//            headWriteCellStyle.setFillForegroundColor(IndexedColors.YELLOW.getIndex());            // 内容的策略//            WriteCellStyle contentWriteCellStyle = new WriteCellStyle();            // 这个策略是 头是头的样式 内容是内容的样式 其他的策略可以自己实现//            HorizontalCellStyleStrategy horizontalCellStyleStrategy =//                    new HorizontalCellStyleStrategy(headWriteCellStyle, contentWriteCellStyle);            response.setContentType("application/vnd.ms-excel");            response.setCharacterEncoding("utf-8");            // 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系            String fileName = URLEncoder.encode("测试", "UTF-8");            response.setHeader("Content-disposition", "attachment;filename=" + fileName + ".xlsx");            EasyExcel.write(response.getOutputStream(),ExportVO.class).sheet("模板").doWrite(GetDemoObject.getObjectList(ExportVO.class, 10000));        } catch (UnsupportedEncodingException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        }    }    public List<ExportVO> getData(){        List<ExportVO> retList = new ArrayList<>();        return retList;    }    @PostMapping("/import")    public String excelImport(@RequestParam("file") MultipartFile file) throws IOException {        service.insert(file,ExportVO.class);        return "success";    }}
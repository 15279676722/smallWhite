package com.example.smallwhite.zookeeper;import java.util.concurrent.locks.Lock;/** * @author: yangqiang * @create: 2021-03-12 10:42 */public class DistributedLockTest {    //100张票    private Integer n = 100;//    private Lock lock = new ReentrantLock();    public void printInfo() {        System.out.println(Thread.currentThread().getName() +                "正在运行,剩余余票:" + --n);    }    public class TicketThread implements Runnable {        @Override        public void run() {            Lock lock = new DistributedLock("localhost:2181", "zk");            lock.lock();            try {                if (n > 0) {                    printInfo();                }            }finally{                lock.unlock();            }        }    }    public void ticketStart() {        TicketThread thread = new TicketThread();        for (int i = 0; i < 2; i++) {            Thread t = new Thread(thread, "mem" + i);            t.start();        }    }    public static void main(String[] args) {        new DistributedLockTest().ticketStart();    }}
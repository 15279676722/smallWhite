package com.example.smallwhite.zookeeper;import org.apache.zookeeper.*;import org.apache.zookeeper.data.Stat;import org.junit.Before;import org.junit.Test;import java.io.IOException;import java.util.List;/** * 连接Zookeeper * @author: yangqiang * @create: 2021-03-08 23:45 */public class TestZookeeper {    private String connectString = "localhost:2181";    private int sessionTimeOut = 2000;    private ZooKeeper zkClient;    @Before    public void init() throws IOException {         zkClient = new ZooKeeper(connectString, sessionTimeOut, new Watcher() {            @Override            public void process(WatchedEvent watchedEvent) {                List<String> children = null;                try {                    children = zkClient.getChildren("/", true);                } catch (KeeperException e) {                    e.printStackTrace();                } catch (InterruptedException e) {                    e.printStackTrace();                }                for(String child:children){                    System.out.println(child);                }                System.out.println("-----------");            }        });    }    /**     * 创建节点     * */    @Test    public void createNode() throws KeeperException, InterruptedException {        String path = zkClient.create("/sanguo/weiguo", "yujin".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);        System.out.println(path);    }    /**     * 获取子节点并监控数据的变化     *     * */    @Test    public void getDataAndWatch() throws KeeperException, InterruptedException {        Thread.sleep(100000);    }    /**     * 判断节点是否存在     * */    @Test    public void exist() throws KeeperException, InterruptedException {        Stat exists = zkClient.exists("/sanguo", false);        System.out.println(exists==null?"not exists":"exists");    }}
package com.example.smallwhite.cas;import sun.misc.Unsafe;import java.lang.reflect.Field;import java.util.concurrent.atomic.AtomicInteger;/** * @author: yangqiang * @create: 2021-03-26 10:15 */public class TestAtomicInteger {    private  int value;    // setup to use Unsafe.compareAndSwapInt for updates    private static long valueOffset;    private static Unsafe unsafe;    static {        try {            //通过反射获取rt.jar下的Unsafe类            Field field = Unsafe.class.getDeclaredField("theUnsafe");            field.setAccessible(true);            unsafe = (Unsafe) field.get(null);            valueOffset = unsafe.objectFieldOffset(TestAtomicInteger.class.getDeclaredField("value"));        } catch (Exception e) {            System.out.println("Get Unsafe instance occur error"+ e);        } finally {        }    }      public int addOne(){        value = value + 1 ;        return value;    }    public int get(){        return value;    }}
package com.example.smallwhite.thread;/** * @author: yangqiang * @create: 2021-03-19 10:51 */public class DeadLockTest {    public static void main(String[] args) throws InterruptedException {        Object lockA = new Object(), lockB = new Object();        Thread threadA = new Thread(new Runnable() {            @Override            public void run() {                synchronized (lockA) {                    System.out.println("thread A get lock A");                    sleep(1000);                    synchronized (lockB) {                        System.out.println("threadA entered");                    }                }            }        });        threadA.start();        sleep(100);        Thread threadB = new Thread(new Runnable() {            @Override            public void run() {                synchronized (lockB) {                    System.out.println("thread B get lock B");                    synchronized (lockA) {                        System.out.println("threadB entered");                    }                }            }        });        threadB.start();    }    private static void sleep(int sleepTime) {        try {            Thread.sleep(sleepTime);        } catch (InterruptedException e) {            e.printStackTrace();        }    }}
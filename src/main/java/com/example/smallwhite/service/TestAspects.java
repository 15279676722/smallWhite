package com.example.smallwhite.service;import lombok.extern.slf4j.Slf4j;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Before;import org.aspectj.lang.annotation.Pointcut;import java.util.HashMap;import java.util.Map;/** * @author: yangqiang * @create: 2020-04-10 16:33 */@Aspect@Slf4jpublic class TestAspects {    Map<Integer,Integer> map = new HashMap<Integer,Integer>();    @Pointcut("execution(* com.example.smallwhite.service.Calculator.div(..)) && args(trackNumber)")    public void trackPlayed(int trackNumber){}    @Before("trackPlayed(trackNumber)")    public void before(int trackNumber){        int playCount = getPlayCount(trackNumber);        map.put(trackNumber,playCount);        map.forEach((k,v)->{            log.info(String.valueOf(k));            log.info(String.valueOf(v));        });    }    public int getPlayCount(int trackNumber){        return map.containsKey(trackNumber)?map.get(trackNumber):0;    }}
package com.example.smallwhite.reflex.V1;import java.lang.reflect.Constructor;import java.lang.reflect.InvocationTargetException;/** * 利用反射破坏单例模式 * 解决方法在构造方法中添加异常声明 * @author: yangqiang * @create: 2021-03-29 19:00 */public class ReflexTest {    public static void main(String[] args) {        Singleton instance = Singleton.getInstance();        Class<Singleton> clazz = Singleton.class;        try {            Constructor<Singleton> declaredConstructor = clazz.getDeclaredConstructor();            Singleton singleton = declaredConstructor.newInstance();            System.out.println(instance==singleton);        } catch (NoSuchMethodException e) {            e.printStackTrace();        } catch (IllegalAccessException e) {            e.printStackTrace();        } catch (InstantiationException e) {            e.printStackTrace();        } catch (InvocationTargetException e) {            e.printStackTrace();        }    }}